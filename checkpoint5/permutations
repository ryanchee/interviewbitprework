public class Solution {
    public ArrayList<ArrayList<Integer>> permute(ArrayList<Integer> a) {
        ArrayList<ArrayList<Integer>> toReturn = new
ArrayList<ArrayList<Integer>>();
        if (a.size() == 1) {
            toReturn.add(a);
        } else {
            int firstVal = a.remove(0);
            ArrayList<ArrayList<Integer>> prev = permute(a);
            for (int i = 0; i < prev.size(); i++) {
                ArrayList<Integer> list = prev.get(i);
                list.add(0, firstVal);
                toReturn.add(list);
                for (int j = 1; j < list.size(); j++) {
                    int curVal = list.get(j);
                    if (curVal != firstVal) {
                        ArrayList<Integer> perm = new ArrayList<Integer>(list);
                        perm.set(0, curVal);
                        perm.set(j, firstVal);
                        if (!toReturn.contains(perm)) {
                            toReturn.add(perm);
                        }
                    }
                }
            }
        }
        return toReturn;
    }
}

