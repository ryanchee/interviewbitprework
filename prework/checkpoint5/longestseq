public class Solution {
    public int longestConsecutive(final List<Integer> a) {
        if (a.size() == 0) {
            return 0;
        }
        Set<Integer> hashSet = new HashSet<Integer>();
        int max = 1;
        int curMax = 1;
     
        for (int i = 0; i < a.size(); i++) {
            hashSet.add(a.get(i));
        }
     
        for (int i = 0; i < a.size(); i++) {
            int down = a.get(i) - 1;
            int up = a.get(i) + 1;
     
            while (hashSet.contains(down)) {
                curMax++;
                hashSet.remove(down);
                down--;
            }
            while (hashSet.contains(up)) {
                curMax++;
                hashSet.remove(up);
                up++;
            }
            if (curMax > max) {
                max = curMax;
            }
            curMax = 1;
        }
     
        return max;
    }
}

